section "Prepare Program & Domain"
stop at examples.tests.MethodDeclarationTest:14
run examples/tests/MethodDeclarationTest.java

section "Build Knowledge Base"
buildkb
checkkb --is-consistent

section "Check presence of simple method & attributes"

assert triples '<<EOF
    prog:SysLoader-examples.tests.MethodDeclarationTest java:hasMethod prog:`SysLoader-examples.tests.MethodDeclarationTest.-void-simpleMethod()` .
'EOF

assert sparql success '<<EOF
    SELECT ?declLocation ?defLocation
    WHERE {
        prog:`SysLoader-examples.tests.MethodDeclarationTest.-void-simpleMethod()` java:isDeclaredAt ?declLocation ;
                                                                                   java:isDefinedAt ?defLocation .

        ?declLocation java:isAtLine "4"^^xsd:int ;
                      java:isAtSourcePath [] .

        ?defLocation java:isAtLine "5"^^xsd:int ;
                      java:isAtSourcePath [] .
    }
'EOF

section "Check if all instances of overloaded method are present"

assert triples '<<EOF
    prog:SysLoader-examples.tests.MethodDeclarationTest java:hasMethod prog:`SysLoader-examples.tests.MethodDeclarationTest.-void-overloadedMethod()` ;
                                                        java:hasMethod prog:`SysLoader-examples.tests.MethodDeclarationTest.-void-overloadedMethod(int)` .
'EOF

assert sparql success '<<EOF
    SELECT ?declLocation1 ?declLocation2
    WHERE {
        prog:`SysLoader-examples.tests.MethodDeclarationTest.-void-overloadedMethod()` java:isDeclaredAt ?declLocation1 .
        prog:`SysLoader-examples.tests.MethodDeclarationTest.-void-overloadedMethod(int)` java:isDeclaredAt ?declLocation2 .

        ?declLocation1 java:isAtLine "7"^^xsd:int .
        ?declLocation2 java:isAtLine "10"^^xsd:int .
    }
'EOF

cont