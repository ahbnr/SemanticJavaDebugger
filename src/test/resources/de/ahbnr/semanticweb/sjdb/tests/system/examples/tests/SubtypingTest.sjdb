section "Prepare Program & Domain"
stop at examples.tests.SubtypingTest:65
run examples/tests/SubtypingTest.java

section "Build Knowledge Base"
buildkb
checkkb --is-consistent

section "Checking Basic Type Hierarchy"

# There is nothing that is an array and a class
assert sparql fail -- '<<EOF
    SELECT ?classArray
    WHERE {
        ?classArray a java:Class ;
                    a java:Array .
    }
'EOF

# java.lang.Object is a class
assert sparql success -- '<<EOF
    SELECT ?object
    WHERE {
        ?object a java:Class .
        FILTER (?object = prog:java.lang.Object)
    }
'EOF

# java.lang.Object[] is an array
assert sparql success -- '<<EOF
    SELECT ?objectArray
    WHERE {
        ?objectArray a java:Array .
        FILTER (?objectArray = prog:`java.lang.Object[]`)
    }
'EOF

# java.lang.Object[] instances are always also java.lang.Object instances
assert sparql success -- '<<EOF
    SELECT ?objectArray
    WHERE {
        ?objectArray rdfs:subClassOf prog:java.lang.Object .
        FILTER (?objectArray = prog:`java.lang.Object[]`)
    }
'EOF

# Classes are always sub-types of java.lang.Object
assert sparql fail -- '<<EOF
    SELECT ?class
    WHERE {
        ?class a java:Class .
        FILTER NOT EXISTS {
            ?class rdfs:subClassOf prog:java.lang.Object .
        }
    }
'EOF

# Arrays are sub-types of java.lang.Object
assert sparql fail -- '<<EOF
    SELECT ?array
    WHERE {
        ?array a java:Array .
        FILTER NOT EXISTS {
            ?array rdfs:subClassOf prog:java.lang.Object .
        }
    }
'EOF

# Array types are also java.lang.Cloneable and java.io.Serializable
assert sparql fail -- '<<EOF
    SELECT ?arrayType
    WHERE {
        ?arrayType a java:Array .
        FILTER NOT EXISTS {
            ?arrayType rdfs:subClassOf prog:java.lang.Cloneable ;
                       rdfs:subClassOf prog:java.io.Serializable .
        }
    }
'EOF

# Primitive type arrays are always sub-types of java:PrimitiveArray
assert sparql fail -- '<<EOF
    SELECT ?arrayType
    WHERE {
        ?arrayType a java:Array .
        ?hasElementRelation rdfs:subPropertyOf java:hasElement ;
                            rdfs:domain ?arrayType ;
                            rdfs:range ?arrayElementClass .
        ?arrayElementClass rdfs:subClassOf java:PrimitiveSequenceElement .
        FILTER NOT EXISTS {
            ?arrayType rdfs:subClassOf java:PrimitiveArray .
        }
    }
'EOF

# Reference type Arrays are always sub-types of Object[] arrays
assert sparql fail -- '<<EOF
    SELECT ?arrayType
    WHERE {
        ?arrayType a java:Array .
        ?hasElementRelation rdfs:subPropertyOf java:hasElement ;
                            rdfs:domain ?arrayType ;
                            rdfs:range ?arrayElementClass .
        ?arrayElementClass rdfs:subClassOf java:SequenceElement%3CObject%3E .
        FILTER NOT EXISTS {
            ?arrayType rdfs:subClassOf prog:java.lang.Object%5B%5D .
        }
    }
'EOF

section "Checking Local Class Inheritance Hierarchy"

assert sparql success -- '<<EOF
    SELECT ?bot1
    WHERE {
        ?bot1 a prog:SysLoader-examples.tests.Bot1 ;
              prog:SysLoader-examples.tests.Bot1.bot1Field [] ;
              prog:SysLoader-examples.tests.Mid.midField [] ;
              prog:SysLoader-examples.tests.Top.topField [] .
    }
'EOF

assert sparql fail -- '<<EOF
    SELECT ?bot1
    WHERE {
        ?bot1 a prog:SysLoader-examples.tests.Bot1 ;
                prog:SysLoader-examples.tests.Bot1.bot2Field [] .
    }
'EOF

assert sparql success -- '<<EOF
    SELECT ?mid
    WHERE {
        ?mid a prog:SysLoader-examples.tests.Mid ;
               prog:SysLoader-examples.tests.Mid.midField [] ;
               prog:SysLoader-examples.tests.Top.topField [] .
    }
'EOF

assert sparql fail -- '<<EOF
    SELECT ?mid
    WHERE {
        ?mid a prog:SysLoader-examples.tests.Mid ;
               prog:SysLoader-examples.tests.Bot1.botField [] .
    }
'EOF

assert sparql fail -- '<<EOF
    SELECT ?notMid
    WHERE {
        ?notMid java:hasMethod prog:`SysLoader-examples.tests.Mid.-void-midMethod()` .
        FILTER (?notMid != prog:SysLoader-examples.tests.Mid)
    }
'EOF

section "Checking Local Interface Hierarchy"

# Check that mid interface has all the methods inherited from the top interface
assert sparql success -- '<<EOF
    SELECT  ?midInterface
    WHERE {
        FILTER (?midInterface = prog:SysLoader-examples.tests.MidInterface) .
        ?midInterface java:hasMethod prog:`SysLoader-examples.tests.MidInterface.-void-midInterfaceMethod()` ;
                      rdfs:subClassOf [
                        a java:Interface ;
                        java:hasMethod prog:`SysLoader-examples.tests.TopInterface1.-void-topInterface1Method()`
                      ] ;
                      rdfs:subClassOf [
                        a java:Interface ;
                        java:hasMethod prog:`SysLoader-examples.tests.TopInterface2.-void-topInterface2Method()`
                      ] .
    }
'EOF

# Check that the Mid class which inherits from MidInterface also has them
assert sparql success -- '<<EOF
    SELECT  ?midClass
    WHERE {
        FILTER (?midClass = prog:SysLoader-examples.tests.Mid) .
        ?midClass rdfs:subClassOf [
                    a java:Interface ;
                    java:hasMethod prog:`SysLoader-examples.tests.MidInterface.-void-midInterfaceMethod()` ;
                  ] ;
                  rdfs:subClassOf [
                    a java:Interface ;
                    java:hasMethod prog:`SysLoader-examples.tests.TopInterface1.-void-topInterface1Method()`
                  ] ;
                  rdfs:subClassOf [
                    a java:Interface ;
                    java:hasMethod prog:`SysLoader-examples.tests.TopInterface2.-void-topInterface2Method()`
                  ] .
    }
'EOF

# All individuals of a top interface should also be individuals of java.lang.Object
assert sparql success -- '<<EOF
    SELECT ?topInterface1
    WHERE {
        FILTER (?topInterface1 = prog:SysLoader-examples.tests.TopInterface1)
        ?topInterface1 rdfs:subClassOf prog:java.lang.Object .
    }
'EOF

cont