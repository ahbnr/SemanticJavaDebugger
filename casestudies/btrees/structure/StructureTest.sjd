reasoner HermiT
domain casestudies/btrees/structure/BTreeStructure.ttl

stop at 'casestudies.btrees.structure.StructureTest:Test point: Node Conditions'
run casestudies.btrees.structure.StructureTest

buildkb --limit-sdk --deep=casestudies.btrees.structure.BTreeNode.children --deep=casestudies.btrees.structure.BTreeNode.keys

close prog:casestudies.btrees.structure.BTreeNode --no-reasoner
close domain:Child
close domain:FragmentedNode

# We will see, that this tree structure violates our conditions
owl isSatisfiable 'prog:casestudies.btrees.structure.BTreeNode and not domain:ValidNode'

# The question remains, why this is the case / which conditions are violated.

# The grandchild node has more than 2*M children
close domain:ConditionOne
owl instancesOf 'prog:casestudies.btrees.structure.BTreeNode and not domain:ConditionOne'

# Child is not a root and not a leaf, but it does not have at least M children
close domain:ConditionTwo
owl instancesOf 'prog:casestudies.btrees.structure.BTreeNode and not domain:ConditionTwo'

# root is not a leaf, but it also does not have at least two children
close domain:ConditionThree
owl instancesOf 'prog:casestudies.btrees.structure.BTreeNode and not domain:ConditionThree'

# Child does not store its children as a continuous block at the start of its child array
owl instancesOf 'domain:FragmentedNode'

cont