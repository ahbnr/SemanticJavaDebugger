stop at 'casestudies.btrees.structure.StructureTest:Test Point'
run casestudies.btrees.structure.StructureTest

domain casestudies/btrees/structure/BTreeStructure.ttl
mapping set deep <<EOF
    casestudies.btrees.structure.BTreeNode.children
    casestudies.btrees.structure.BTreeNode.keys
EOF
buildkb
close prog:casestudies.btrees.structure.BTreeNode --no-reasoner

# We can see that there is a node which is not valid
infer entails 'SubClassOf( prog:casestudies.btrees.structure.BTreeNode domain:ValidNode )'

# Ok, then let's ask which nodes are not valid:
infer instancesOf 'prog:casestudies.btrees.structure.BTreeNode and not domain:ValidNode'

# What condition does it violate? Lets check

infer entails 'ClassAssertion( domain:ConditionOne ?i0 )'
# Condition One holds

infer entails 'ClassAssertion( domain:ConditionTwo ?i0 )'
# Condition Two holds

infer entails 'ClassAssertion( domain:ConditionThree ?i0 )'
# Condition Three does not hold!
# Hence, ?i0 must be a root node which is neither a leaf nor does it have at least two children

# Further inspection with SPARQL reveals that there are only two nodes and a key value is missing
sparql '<<EOF
    SELECT ?n ?k WHERE {
        ?n prog:casestudies.btrees.structure.BTreeNode.keys [
            java:hasElement [
                java:storesReference [ java:hasPlainValue ?k ]
            ]
        ] .
    }
'EOF

# We can conclude, that one of the new nodes created during splitting must have gotten lost.
# We confirm this with a few additional inspections:

cont

stop at 'casestudies.btrees.structure.BTree:BEFORE SPLIT'
run casestudies.btrees.structure.StructureTest

# No error before splitting
buildkb
close prog:casestudies.btrees.structure.BTreeNode --no-reasoner
infer entails 'SubClassOf( prog:casestudies.btrees.structure.BTreeNode domain:ValidNode )'

# But conditions are violated after splitting:
stop at 'casestudies.btrees.structure.BTree:AFTER SPLIT'
cont

buildkb
close prog:casestudies.btrees.structure.BTreeNode --no-reasoner
infer entails 'SubClassOf( prog:casestudies.btrees.structure.BTreeNode domain:ValidNode )'

cont
cont
