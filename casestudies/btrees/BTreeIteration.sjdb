reasoner HermiT

sourcepath src/main/java
classpaths build/classes/java/main
domain BTreeIteration.ttl

mapping set deep <<EOF
    SysLoader-casestudies.btrees.iterator.BTreeNode.children
    SysLoader-casestudies.btrees.iterator.BTreeNode.keys
    SysLoader-casestudies.btrees.iterator.BTreeIterator.stack
EOF
stop <<EOF
    at 'casestudies.btrees.iterator.BTreeIterator:first iteration endpoint'
    --if-unsatisfiable domain:PostCondition
    --close domain:NullableChildrenOfCurrentNode
EOF

stop <<EOF
    at 'casestudies.btrees.iterator.BTreeIterator:second iteration endpoint'
    --if-unsatisfiable domain:PostCondition
    --close domain:NullableChildrenOfCurrentNode
EOF

run casestudies.btrees.iterator.IteratorTest
assert at 'casestudies.btrees.iterator.BTreeIterator:first iteration endpoint'
buildkb

# The conditional breakpoints will be hit for this incorrect implementation
# Now, lets find the cause of the postcondition violation:

# Lets see which nodes are the children of the current node
infer instancesOf domain:ChildrenOfCurrentNode

# TODO: For some reason Openllet SPARQL-DL fails here
reasoner JenaOwlMicro
# A sparql query shows the stack
sparql -- '<<EOF
  SELECT ?n ?idx
  WHERE {
    run:frame0 java:this [
      prog:SysLoader-casestudies.btrees.iterator.BTreeIterator.stack [
        java:hasElement [
          java:hasIndex ?idx ;
          java:storesReference [
            prog:SysLoader-casestudies.btrees.iterator.BTreeIterator%24NodeTraversalState.node ?n
          ]
        ]
      ]
    ]
  } ORDER BY DESC(?idx)
'EOF

assert variable ?n
assert variable ?idx

# We can see, that the top of the stack (highest index) is not one of the children

# Result: The insertion instructions for the stack seem to be swapped