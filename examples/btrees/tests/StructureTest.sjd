reasoner HermiT
domain examples/btrees/BTreeStructure.ttl

section "Node Types"

stop at 'examples.btrees.tests.StructureTest:Test point: NodeTypeTests'
run examples.btrees.tests.StructureTest

buildkb --limit-sdk --deep=examples.btrees.BTreeNode.children --deep=examples.btrees.BTreeNode.keys
close domain:Child
assert infer entails "local:root Type: domain:Root"
assert infer entailsNot "local:root Type: domain:Child"
assert infer entailsNot "local:root Type: domain:Leaf"

assert infer entails "local:leaf Type: domain:Leaf"
assert infer entails "local:leaf Type: domain:Child"
assert infer entailsNot "local:leaf Type: domain:Root"

assert infer entails "local:middle Type: (not domain:Root and not domain:Leaf)"
assert infer entails "local:middle Type: domain:Child"



section "Condition One"

stop at 'examples.btrees.tests.StructureTest:Test point: ConditionOneSuccess'
cont

buildkb --limit-sdk --deep=examples.btrees.BTreeNode.children --deep=examples.btrees.BTreeNode.keys
close prog:examples.btrees.BTreeNode --no-reasoner
assert infer isUnsatisfiable 'prog:examples.btrees.BTreeNode and not domain:ConditionOne'

stop at 'examples.btrees.tests.StructureTest:Test point: ConditionOneError'
cont

buildkb --limit-sdk --deep=examples.btrees.BTreeNode.children --deep=examples.btrees.BTreeNode.keys
close prog:examples.btrees.BTreeNode --no-reasoner
assert infer isSatisfiable 'prog:examples.btrees.BTreeNode and not domain:ConditionOne'



section "Condition Two"

stop at 'examples.btrees.tests.StructureTest:Test point: ConditionTwoSuccess'
cont

buildkb --limit-sdk --deep=examples.btrees.BTreeNode.children --deep=examples.btrees.BTreeNode.keys
close prog:examples.btrees.BTreeNode --no-reasoner
close domain:Child
assert infer isUnsatisfiable 'prog:examples.btrees.BTreeNode and not domain:ConditionTwo'

stop at 'examples.btrees.tests.StructureTest:Test point: ConditionTwoError'
cont

buildkb --limit-sdk --deep=examples.btrees.BTreeNode.children --deep=examples.btrees.BTreeNode.keys
close prog:examples.btrees.BTreeNode --no-reasoner
close domain:Child
assert infer isSatisfiable 'prog:examples.btrees.BTreeNode and not domain:ConditionTwo'

assert infer entails 'local:root Type: domain:ConditionTwo'
assert infer entails 'local:leftMiddle Type: (prog:examples.btrees.BTreeNode and not domain:ConditionTwo)'



section "Condition Three"

stop at 'examples.btrees.tests.StructureTest:Test point: ConditionThreeSuccess'
cont

buildkb --limit-sdk --deep=examples.btrees.BTreeNode.children --deep=examples.btrees.BTreeNode.keys
close prog:examples.btrees.BTreeNode --no-reasoner
close domain:Child
assert infer isUnsatisfiable 'prog:examples.btrees.BTreeNode and not domain:ConditionThree'

stop at 'examples.btrees.tests.StructureTest:Test point: ConditionThreeError'
cont

buildkb --limit-sdk --deep=examples.btrees.BTreeNode.children --deep=examples.btrees.BTreeNode.keys
close prog:examples.btrees.BTreeNode --no-reasoner
close domain:Child
assert infer isSatisfiable 'prog:examples.btrees.BTreeNode and not domain:ConditionThree'

assert infer entails 'local:root Type: (prog:examples.btrees.BTreeNode and not domain:ConditionThree)'
assert infer entails 'local:leaf Type: domain:ConditionThree'



section "Valid Node Condition"

stop at 'examples.btrees.tests.StructureTest:Test point: ValidNodeConditionSuccess'
cont

buildkb --limit-sdk --deep=examples.btrees.BTreeNode.children --deep=examples.btrees.BTreeNode.keys
close prog:examples.btrees.BTreeNode --no-reasoner
close domain:Child
close domain:FragmentedNode
assert infer isUnsatisfiable 'prog:examples.btrees.BTreeNode and not domain:ValidNode'

stop at 'examples.btrees.tests.StructureTest:Test point: ValidNodeConditionError'
cont

buildkb --limit-sdk --deep=examples.btrees.BTreeNode.children --deep=examples.btrees.BTreeNode.keys
close prog:examples.btrees.BTreeNode --no-reasoner
close domain:Child
close domain:FragmentedNode
assert infer isSatisfiable 'prog:examples.btrees.BTreeNode and not domain:ValidNode'

section "Split Error"

stop at 'examples.btrees.tests.StructureTest:Test point: brokenSplitTest'
cont

buildkb --limit-sdk --deep=examples.btrees.BTreeNode.children --deep=examples.btrees.BTreeNode.keys
close prog:examples.btrees.BTreeNode --no-reasoner
close domain:Child
close domain:FragmentedNode
infer instancesOf domain:ValidNode
infer instancesOf prog:examples.btrees.BTreeNode
assert infer isSatisfiable 'prog:examples.btrees.BTreeNode and not domain:ValidNode'

cont