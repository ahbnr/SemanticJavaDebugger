@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix java: <https://github.com/ahbnr/SemanticJavaDebugger/Java#> .
@prefix prog: <https://github.com/ahbnr/SemanticJavaDebugger/Program#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix domain: <https://github.com/ahbnr/SemanticJavaDebugger/BTrees#> .

domain:Node rdf:type owl:Class ;
            owl:equivalentClass
            [
                a owl:Class ;
                owl:intersectionOf (
                    prog:examples.btrees.BTreeNode
                    [
                        rdfs:comment """Every node can have at most 2M children, where M is the order of the tree."""^^rdfs:Literal ;
                        rdf:type owl:Restriction ;
                        owl:onProperty prog:examples.btrees.BTreeNode.children ;
                        owl:allValuesFrom [
                            rdf:type owl:Restriction ;
                            owl:onProperty java:hasElement ;
                            owl:maxCardinality "4"^^xsd:nonNegativeInteger
                        ]
                    ]
                    # [
                    #     rdfs:comment """Every non-root node must have at least M children, where M is the order of the tree."""^^rdfs:Literal ;
                    #     rdf:type owl:Restriction ;
                    #     owl:onProperty prog:examples.btrees.BTreeNode.children ;
                    #     owl:allValuesFrom [
                    #         rdf:type owl:Restriction ;
                    #         owl:onProperty java:hasElement ;
                    #         owl:minCardinality "2"^^xsd:nonNegativeInteger
                    #     ]
                    # ]
                )
            ] .

domain:Leaf a owl:Class ;
            owl:equivalentClass [
                a owl:Class ;
                owl:intersectionOf (
                    domain:Node
                    [
                        a owl:Restriction ;
                        owl:onProperty prog:examples.btrees.BTreeNode.children ;
                        owl:allValuesFrom [
                            a owl:Restriction ;
                            owl:onProperty java:hasElement ;
                            owl:cardinality "0"^^xsd:nonNegativeInteger
                        ]
                    ]
                )
            ] .